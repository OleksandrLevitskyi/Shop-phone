{"ast":null,"code":"const initState = {\n  items: {},\n  totalPrice: 0,\n  totalItems: 0\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.cost + sum, 0);\n\nfunction basket(state = initState, action) {\n  switch (action.type) {\n    case \"ADD_PRODUCT_BASKET\":\n      {\n        const currentProductItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id], action.payload];\n        const newObj = { ...state.items,\n          [action.payload.id]: {\n            items: currentProductItems,\n            totalPrice: currentProductItems.reduce((sum, obj) => obj.cost + sum, 0)\n          }\n        };\n        const arrProduct = [].concat.apply([], Object.values(newObj));\n        const totalPrice = arrProduct.reduce((sum, obj) => obj.cost + sum, 0);\n        return { ...state,\n          items: newObj,\n          totalItems: arrProduct.length,\n          totalPrice\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default basket;","map":{"version":3,"sources":["/Users/sashalevitskiy/Desktop/MyProjects/technical_test/src/redux/reducers/basket.js"],"names":["initState","items","totalPrice","totalItems","getTotalPrice","arr","reduce","sum","obj","cost","basket","state","action","type","currentProductItems","payload","id","newObj","arrProduct","concat","apply","Object","values","length"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,UAAU,EAAE,CAFI;AAGhBC,EAAAA,UAAU,EAAE;AAHI,CAAlB;;AAMA,MAAMC,aAAa,GAAGC,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,GAAWF,GAApC,EAAyC,CAAzC,CAA7B;;AAEA,SAASG,MAAT,CAAgBC,KAAK,GAAGX,SAAxB,EAAmCY,MAAnC,EAA2C;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AAA2B;AACvB,cAAMC,mBAAmB,GAAG,CAACH,KAAK,CAACV,KAAN,CAAYW,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAD,GAC1B,CAACJ,MAAM,CAACG,OAAR,CAD0B,GAE1B,CAAC,GAAGJ,KAAK,CAACV,KAAN,CAAYW,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAJ,EAAoCJ,MAAM,CAACG,OAA3C,CAFF;AAIF,cAAME,MAAM,GAAG,EACb,GAAGN,KAAK,CAACV,KADI;AAEb,WAACW,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqB;AACjBf,YAAAA,KAAK,EAAEa,mBADU;AAEjBZ,YAAAA,UAAU,EAAEY,mBAAmB,CAACR,MAApB,CAA2B,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,GAAWF,GAApD,EAAyD,CAAzD;AAFK;AAFR,SAAf;AAOA,cAAMW,UAAU,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBC,MAAM,CAACC,MAAP,CAAcL,MAAd,CAApB,CAAnB;AACA,cAAMf,UAAU,GAAGgB,UAAU,CAACZ,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,GAAWF,GAA3C,EAAgD,CAAhD,CAAnB;AACA,eAAO,EACL,GAAGI,KADE;AAELV,UAAAA,KAAK,EAAEgB,MAFF;AAGLd,UAAAA,UAAU,EAAEe,UAAU,CAACK,MAHlB;AAILrB,UAAAA;AAJK,SAAP;AAMD;;AACD;AACE,aAAOS,KAAP;AAvBJ;AAyBD;;AAED,eAAeD,MAAf","sourcesContent":["const initState = {\n  items: {},\n  totalPrice: 0,\n  totalItems: 0,\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.cost + sum, 0)\n\nfunction basket(state = initState, action) {\n  switch (action.type) {\n    case \"ADD_PRODUCT_BASKET\": {\n        const currentProductItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id], action.payload];\n\n      const newObj = {\n        ...state.items,\n        [action.payload.id]: {\n            items: currentProductItems,\n            totalPrice: currentProductItems.reduce((sum, obj) => obj.cost + sum, 0),\n        },\n      };\n      const arrProduct = [].concat.apply([], Object.values(newObj));\n      const totalPrice = arrProduct.reduce((sum, obj) => obj.cost + sum, 0);\n      return {\n        ...state,\n        items: newObj,\n        totalItems: arrProduct.length,\n        totalPrice,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default basket;\n"]},"metadata":{},"sourceType":"module"}