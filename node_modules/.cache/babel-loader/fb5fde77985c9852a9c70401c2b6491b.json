{"ast":null,"code":"const initState = {\n  items: {},\n  totalPrice: 0,\n  totalItems: 0\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.cost + sum, 0);\n\nfunction basket(state = initState, action) {\n  switch (action.type) {\n    case \"ADD_PRODUCT_BASKET\":\n      {\n        const currentProductItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n        const newObj = { ...state.items,\n          [action.payload.id]: {\n            items: currentProductItems,\n            totalPrice: getTotalPrice(currentProductItems)\n          }\n        };\n        const items = Object.values(newObj).map(obj => obj.items);\n        const arrProduct = [].concat.apply([], items);\n        const totalPrice = getTotalPrice(arrProduct);\n        return { ...state,\n          items: newObj,\n          totalItems: arrProduct.length,\n          totalPrice\n        };\n      }\n\n    case 'PLUS_CART_ITEM':\n      {\n        const newObjItems = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n        const newItems = { ...state.items,\n          [action.payload]: {\n            items: newObjItems,\n            totalPrice: getTotalPrice(newObjItems)\n          }\n        };\n        const totalCount = getTotalSum(newItems, 'items.length');\n        const totalPrice = getTotalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'MINUS_CART_ITEM':\n      {\n        const oldItems = state.items[action.payload].items;\n        const newObjItems = oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n        const newItems = { ...state.items,\n          [action.payload]: {\n            items: newObjItems,\n            totalPrice: getTotalPrice(newObjItems)\n          }\n        };\n        const totalCount = getTotalSum(newItems, 'items.length');\n        const totalPrice = getTotalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default basket;","map":{"version":3,"sources":["/Users/sashalevitskiy/Desktop/MyProjects/technical_test/src/redux/reducers/basket.js"],"names":["initState","items","totalPrice","totalItems","getTotalPrice","arr","reduce","sum","obj","cost","basket","state","action","type","currentProductItems","payload","id","newObj","Object","values","map","arrProduct","concat","apply","length","newObjItems","newItems","totalCount","getTotalSum","oldItems","slice"],"mappings":"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","sourcesContent":["const initState = {\n  items: {},\n  totalPrice: 0,\n  totalItems: 0,\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.cost + sum, 0)\n\nfunction basket(state = initState, action) {\n  switch (action.type) {\n    case \"ADD_PRODUCT_BASKET\": {\n        const currentProductItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const newObj = {\n        ...state.items,\n        [action.payload.id]: {\n            items: currentProductItems,\n            totalPrice: getTotalPrice(currentProductItems)\n        },\n      };\n      const items = Object.values(newObj).map(obj => obj.items)\n      const arrProduct = [].concat.apply([], items);\n      const totalPrice = getTotalPrice(arrProduct);\n      return {\n        ...state,\n        items: newObj,\n        totalItems: arrProduct.length,\n        totalPrice,\n      };\n    }\n    case 'PLUS_CART_ITEM': {\n      const newObjItems = [\n        ...state.items[action.payload].items,\n        state.items[action.payload].items[0],\n      ];\n      const newItems = {\n        ...state.items,\n        [action.payload]: {\n          items: newObjItems,\n          totalPrice: getTotalPrice(newObjItems),\n        },\n      };\n\n      const totalCount = getTotalSum(newItems, 'items.length');\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n    case 'MINUS_CART_ITEM': {\n      const oldItems = state.items[action.payload].items;\n      const newObjItems =\n        oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n      const newItems = {\n        ...state.items,\n        [action.payload]: {\n          items: newObjItems,\n          totalPrice: getTotalPrice(newObjItems),\n        },\n      };\n\n      const totalCount = getTotalSum(newItems, 'items.length');\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default basket;\n"]},"metadata":{},"sourceType":"module"}