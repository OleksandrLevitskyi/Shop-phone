{"ast":null,"code":"const initState = {\n  items: {},\n  totalPrice: 0,\n  totalItems: 0\n};\n\nfunction basket(state = initState, action) {\n  switch (action.type) {\n    case \"ADD_PRODUCT_BASKET\":\n      {\n        const newObj = { ...state.items,\n          [action.payload.id]: !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id], action.payload]\n        };\n        const arrProduct = [].concat.apply([], Object.values(newObj));\n        const totalPrice = arrProduct.reduce((sum, obj) => obj.cost + sum, 0);\n        return { ...state,\n          items: newObj,\n          totalItems: arrProduct.length,\n          totalPrice\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default basket;","map":{"version":3,"sources":["/Users/sashalevitskiy/Desktop/MyProjects/technical_test/src/redux/reducers/basket.js"],"names":["initState","items","totalPrice","totalItems","basket","state","action","type","newObj","payload","id","arrProduct","concat","apply","Object","values","reduce","sum","obj","cost","length"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,EADO;AAEdC,EAAAA,UAAU,EAAE,CAFE;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;;AAME,SAASC,MAAT,CAAgBC,KAAK,GAAGL,SAAxB,EAAmCM,MAAnC,EAA2C;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AAA2B;AACzB,cAAMC,MAAM,GAAG,EACb,GAAGH,KAAK,CAACJ,KADI;AAEb,WAACK,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqB,CAACL,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAD,GACjB,CAACJ,MAAM,CAACG,OAAR,CADiB,GAEjB,CAAC,GAAGJ,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAJ,EAAoCJ,MAAM,CAACG,OAA3C;AAJS,SAAf;AAMA,cAAME,UAAU,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBC,MAAM,CAACC,MAAP,CAAcP,MAAd,CAApB,CAAnB;AACA,cAAMN,UAAU,GAAGS,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,GAAWF,GAA3C,EAAgD,CAAhD,CAAnB;AACA,eAAO,EACL,GAAGZ,KADE;AAELJ,UAAAA,KAAK,EAAEO,MAFF;AAGLL,UAAAA,UAAU,EAAEQ,UAAU,CAACS,MAHlB;AAILlB,UAAAA;AAJK,SAAP;AAMD;;AACD;AACE,aAAOG,KAAP;AAlBJ;AAoBD;;AAED,eAAeD,MAAf","sourcesContent":["const initState = {\n    items: {},\n    totalPrice: 0,\n    totalItems: 0,\n  };\n  \n  function basket(state = initState, action) {\n    switch (action.type) {\n      case \"ADD_PRODUCT_BASKET\": {\n        const newObj = {\n          ...state.items,\n          [action.payload.id]: !state.items[action.payload.id]\n            ? [action.payload]\n            : [...state.items[action.payload.id], action.payload],\n        };\n        const arrProduct = [].concat.apply([], Object.values(newObj));\n        const totalPrice = arrProduct.reduce((sum, obj) => obj.cost + sum, 0);\n        return {\n          ...state,\n          items: newObj,\n          totalItems: arrProduct.length,\n          totalPrice,\n        };\n      }\n      default:\n        return state;\n    }\n  }\n  \n  export default basket;"]},"metadata":{},"sourceType":"module"}